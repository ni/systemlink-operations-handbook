{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 The SystemLink Operations Handbook contains documentation, examples, and example config files for IT professionals to use when managing more advanced configurations of SystemLink Server . For information about how to install and use a SystemLink server, see the latest product manual on ni.com . Source and contributions for the handbook and example files can be found in the systemlink-operations-handbook GitHub repository . While the handbook is not specific to any version of SystemLink Server, the product continues to evolve over time. Some chapters or examples may specify a version or range of versions of SystemLink that they apply to.","title":"Introduction"},{"location":"#introduction","text":"The SystemLink Operations Handbook contains documentation, examples, and example config files for IT professionals to use when managing more advanced configurations of SystemLink Server . For information about how to install and use a SystemLink server, see the latest product manual on ni.com . Source and contributions for the handbook and example files can be found in the systemlink-operations-handbook GitHub repository . While the handbook is not specific to any version of SystemLink Server, the product continues to evolve over time. Some chapters or examples may specify a version or range of versions of SystemLink that they apply to.","title":"Introduction"},{"location":"ldap/ldap/","text":"Sign on with LDAP \u00b6 You can configure SystemLink to use the Lightweight Directory Access Protocol (LDAP) for user authentication. Use LDAP attributes and groups to map users to roles and workspaces in SystemLink's role based access control system. Assumptions and Prerequisites \u00b6 A server running SystemLink. Refer to Installing and Configuring SystemLink Server and Clients for the basics of setting up a SystemLink server. Administrator desktop access to the SystemLink server. An LDAP server accessible to the SystemLink server. A bind user and bind password for the LDAP server. SystemLink supports anonymous connections. In this case the bind user and bind password are not needed. Familiarity with the LDAP attributes available to your organization. If you do not know what LDAP attributes and groups are available to you, talk with your LDAP system administrator. Tools such ADExplorer can be helpful to explore the attributes assigned to your users. Enabling LDAP in SystemLink \u00b6 Configuring Authentication \u00b6 Log into the server running SystemLink and open NI Web Sever Configuration . Go to the Authentication tab and enable Connect to an LDAP server . Enter the LDAP URL for your sever. Refer to LDAP URLs for details on how to structure this URL. Enter the bind user. Refer to Bind User for details on usernames that can be used here. Enter the bind password. Click Apply and Restart . Configuration needed to enable logging into a SystemLink server using LDAP credentials. You may now login to the SystemLink server using your LDAP credentials. To access systems and data in SystemLink, configure workspace and role mappings. Refer to Mapping LDAP Attributes and Groups to SystemLink Workspaces and Roles for details. View from a user who can login but does not have any workspace and role mappings. LDAP URL and Bind User \u00b6 You must provide a URL and bind user and bind password to establish an authenticated connection between your SystemLink server and LDAP server. LDAP URL \u00b6 The LDAP URL follows a standard scheme. URL Scheme <ldap>://<server-dns>:<port>/<target-entry-dn>?<username-attribute>?<scope>?<filter> protocol: ldap or ldaps for secure connections. SystemLink does not support STARTTLS, which allows connections over non-TLS and then initiate a TLS handshake. server-dns: The LDAP server SystemLink is connecting to. port: The port of the LDAP server. If your LDAP server is backed by Windows Active Directory, you may point to the global catalog on port 3268 to enable login from multiple domains (forest). target-entry-dn: The base search distinguished name (DN) for the LDAP directory user-name-attribute: The attribute that determines the SystemLink username for login. scope: The scope of the directory search. Scope defaults to sub but can be set to one to restrict users to the base DN. filter: The LDAP search filter. This defaults to objectClass=* to find find all objects in the directory. This allows you to restrict login to users who have a specific attribute. Basic LDAP URL Example Example: ldap://example.com:389/dc=example,dc=com?sAMAccountName In this example the server is example.com , the port is 389, the base search DN is dc=example,dc=com and the LDAP attribute used for user login is sAMAccountName . Example LDAP URLs specifying different usernames for the user Jane Doe URL: ldap://example.com/dc=example,dc=com?sAMAccountName Username: jdoe URL: ldap://example.com/dc=example,dc=com?userPrincipalName Username: jane.doe@example.com Username jdoe is used because the sAMAccountName attribute is specified in the LDAP URL. If a username attribute is not specified NI Web Server Configuration will automatically add uid as the attribute. Depending on your LDAP directory setup this attribute may not be available. Bind User \u00b6 The bind user and bind password are used to authenticate with the LDAP server. Provide a distinguishedName or a userPrincipalName to specify the bind user. If the password for this user changes, NI Web Server Configuration must be updated for users to continue to log into SystemLink. Bind user formats for the user Jane Doe distinguishedName: cn=jdoe,dc=example,dc=com userPrincipalName: jane.doe@example.com Mapping LDAP Groups, Users, and Attributes to Workspaces and Roles \u00b6 To add a user or collection of users to a workspace and assign a role you must complete the role mapping workflow. Log in to the SystemLink web application with a user mapped to the Server Administrator role. Go to Security > Workspaces and click the gear icon in the top right. Create a new workspace or edit an existing workspace. Go to the Role Mappings tab. Click +MAPPING and select one of the available LDAP mapping types: LDAP Group , LDAP User , or LDAP Attribute . If you have have selected LDAP Attribute enter a valid key and value. For LDAP User or LDAP Group enter a valid value. LDAP Group Mapping \u00b6 LDAP Group mapping queries the objectClass of group (Active Directory specific), groupOfName , and groupOfUniqueNames to matches either member or uniqueMember attributes of the group. LDAP User Mapping \u00b6 You may specify a LDAP username when creating workspace and role mappings. The username you specify is the same as the usernames for logging into SystemLink. LDAP Attribute Mapping \u00b6 You can use any available LDAP attribute to create a workspace and role mapping. In this case both the name and value of the attribute must match exactly for the mapping to be successful. example LDAP attribute mapping Mapping the country attribute c with the value US to the Data Maintainer Role in the Default workspace.","title":"Sign on with LDAP"},{"location":"ldap/ldap/#sign-on-with-ldap","text":"You can configure SystemLink to use the Lightweight Directory Access Protocol (LDAP) for user authentication. Use LDAP attributes and groups to map users to roles and workspaces in SystemLink's role based access control system.","title":"Sign on with LDAP"},{"location":"ldap/ldap/#assumptions-and-prerequisites","text":"A server running SystemLink. Refer to Installing and Configuring SystemLink Server and Clients for the basics of setting up a SystemLink server. Administrator desktop access to the SystemLink server. An LDAP server accessible to the SystemLink server. A bind user and bind password for the LDAP server. SystemLink supports anonymous connections. In this case the bind user and bind password are not needed. Familiarity with the LDAP attributes available to your organization. If you do not know what LDAP attributes and groups are available to you, talk with your LDAP system administrator. Tools such ADExplorer can be helpful to explore the attributes assigned to your users.","title":"Assumptions and Prerequisites"},{"location":"ldap/ldap/#enabling-ldap-in-systemlink","text":"","title":"Enabling LDAP in SystemLink"},{"location":"ldap/ldap/#configuring-authentication","text":"Log into the server running SystemLink and open NI Web Sever Configuration . Go to the Authentication tab and enable Connect to an LDAP server . Enter the LDAP URL for your sever. Refer to LDAP URLs for details on how to structure this URL. Enter the bind user. Refer to Bind User for details on usernames that can be used here. Enter the bind password. Click Apply and Restart . Configuration needed to enable logging into a SystemLink server using LDAP credentials. You may now login to the SystemLink server using your LDAP credentials. To access systems and data in SystemLink, configure workspace and role mappings. Refer to Mapping LDAP Attributes and Groups to SystemLink Workspaces and Roles for details. View from a user who can login but does not have any workspace and role mappings.","title":"Configuring Authentication"},{"location":"ldap/ldap/#ldap-url-and-bind-user","text":"You must provide a URL and bind user and bind password to establish an authenticated connection between your SystemLink server and LDAP server.","title":"LDAP URL and Bind User"},{"location":"ldap/ldap/#ldap-url","text":"The LDAP URL follows a standard scheme. URL Scheme <ldap>://<server-dns>:<port>/<target-entry-dn>?<username-attribute>?<scope>?<filter> protocol: ldap or ldaps for secure connections. SystemLink does not support STARTTLS, which allows connections over non-TLS and then initiate a TLS handshake. server-dns: The LDAP server SystemLink is connecting to. port: The port of the LDAP server. If your LDAP server is backed by Windows Active Directory, you may point to the global catalog on port 3268 to enable login from multiple domains (forest). target-entry-dn: The base search distinguished name (DN) for the LDAP directory user-name-attribute: The attribute that determines the SystemLink username for login. scope: The scope of the directory search. Scope defaults to sub but can be set to one to restrict users to the base DN. filter: The LDAP search filter. This defaults to objectClass=* to find find all objects in the directory. This allows you to restrict login to users who have a specific attribute. Basic LDAP URL Example Example: ldap://example.com:389/dc=example,dc=com?sAMAccountName In this example the server is example.com , the port is 389, the base search DN is dc=example,dc=com and the LDAP attribute used for user login is sAMAccountName . Example LDAP URLs specifying different usernames for the user Jane Doe URL: ldap://example.com/dc=example,dc=com?sAMAccountName Username: jdoe URL: ldap://example.com/dc=example,dc=com?userPrincipalName Username: jane.doe@example.com Username jdoe is used because the sAMAccountName attribute is specified in the LDAP URL. If a username attribute is not specified NI Web Server Configuration will automatically add uid as the attribute. Depending on your LDAP directory setup this attribute may not be available.","title":"LDAP URL"},{"location":"ldap/ldap/#bind-user","text":"The bind user and bind password are used to authenticate with the LDAP server. Provide a distinguishedName or a userPrincipalName to specify the bind user. If the password for this user changes, NI Web Server Configuration must be updated for users to continue to log into SystemLink. Bind user formats for the user Jane Doe distinguishedName: cn=jdoe,dc=example,dc=com userPrincipalName: jane.doe@example.com","title":"Bind User"},{"location":"ldap/ldap/#mapping-ldap-groups-users-and-attributes-to-workspaces-and-roles","text":"To add a user or collection of users to a workspace and assign a role you must complete the role mapping workflow. Log in to the SystemLink web application with a user mapped to the Server Administrator role. Go to Security > Workspaces and click the gear icon in the top right. Create a new workspace or edit an existing workspace. Go to the Role Mappings tab. Click +MAPPING and select one of the available LDAP mapping types: LDAP Group , LDAP User , or LDAP Attribute . If you have have selected LDAP Attribute enter a valid key and value. For LDAP User or LDAP Group enter a valid value.","title":"Mapping LDAP Groups, Users, and Attributes to Workspaces and Roles"},{"location":"ldap/ldap/#ldap-group-mapping","text":"LDAP Group mapping queries the objectClass of group (Active Directory specific), groupOfName , and groupOfUniqueNames to matches either member or uniqueMember attributes of the group.","title":"LDAP Group Mapping"},{"location":"ldap/ldap/#ldap-user-mapping","text":"You may specify a LDAP username when creating workspace and role mappings. The username you specify is the same as the usernames for logging into SystemLink.","title":"LDAP User Mapping"},{"location":"ldap/ldap/#ldap-attribute-mapping","text":"You can use any available LDAP attribute to create a workspace and role mapping. In this case both the name and value of the attribute must match exactly for the mapping to be successful. example LDAP attribute mapping Mapping the country attribute c with the value US to the Data Maintainer Role in the Default workspace.","title":"LDAP Attribute Mapping"},{"location":"openid-connect/openid-connect/","text":"Single Sign-on with OpenID Connect \u00b6 You can configure SystemLink to use OpenID Connect to authorize users. This enables SystemLink to use a common identity for users across multiple applications. This also means SystemLink leverages corporate single sign-on (SSO) and all its security benefits, such as streamlined login and limiting user credential proliferation. You can use OpenID Connect alongside or as a replacement for LDAP, Active Directory, and local Windows accounts for authentication. Assumptions and Prerequisites \u00b6 A server running SystemLink 2020R4 or greater. Refer to Installing and Configuring SystemLink Server and Clients for the basics of setting up a SystemLink server A DNS name for the SystemLink server SystemLink login with the Server Administrator role Administrator desktop access to the SystemLink server An OpenID Connect Provider server such as PingFederate , Azure ADFS , Okta , or another certified provider that has been fully setup and configured for OpenID Connect authentication Enabling OpenID Connect in SystemLink \u00b6 Log into the server running SystemLink and go to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\openidc . Add the configuration files to SystemLink to connect to your OpenID Connect provider. For details, refer to OpenID Connect Configuration Files in SystemLink Server . Open NI Web Server Configuration . Go to the Authentication tab and enable Use OpenID Connect (advanced) . Click Apply and restart . Login into the SystemLink web application with a user assigned the Server Administrator role. Go to Security > Roles and click the gear icon in the top right. Add an OpenID Connect Claim mapping for the Server Administrator role. For details, refer to Mapping OpenID Connect Claims to SystemLink Workspaces and Roles . Log out and log in as an OpenID Connect user with a mapping for the Server Administrator role and confirm they have the correct privileges. Enable OpenID Connect in NI Web Server OpenID Connect Configuration Files in SystemLink Server \u00b6 There are three files that you must create to connect your SystemLink server to an OpenID Connect provider: [provider-dns].conf , [provider-dns].client , and [provider-dns].provider . The [provider-dns] portion of each filename must be the URL-encoded fully qualified domain name. Refer to openid-connect-config for examples of each of these files. Example An OpenID Connect provider with the DNS example.com:9999 would yield files named example.com%3a9999.conf , example.com%3a9999.client , and example.com%3a9999.provider . These files do not exist for new SystemLink installations. Add each file to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\openidc . Restart the NI Web Server to apply changes. You can configure SystemLink to support multiple OpenID Connect providers simultaneously by creating a [provider-dns].conf , [provider-dns].client , and [provider-dns].provider file for each provider. The user ID in SystemLink must be unique across providers. This ID takes the form [sub_claim]@issuer . You can see the ID SystemLink associates with a user in the user details in SystemLink Security. SystemLink Login Configuration \u00b6 [provider-dns].conf describes the scopes SystemLink will request, the text and icon for the provider login button, and private keys for ID token key management encryption. { \"scope\" : \"openid email profile\" , \"ni-attributes\" : { \"displayName\" : \"Log in with PingFederate\" , \"iconUri\" : \"/login/assets/pf.png\" }, \"keys\" : [ { \"p\" : \"...\" , \"kty\" : \"RSA\" , \"q\" : \"...\" , \"d\" : \"...\" , \"e\" : \"AQAB\" , \"use\" : \"enc\" , \"kid\" : \"2020-11-20\" , \"qi\" : \"...\" , \"dp\" : \"...\" , \"dq\" : \"...\" , \"n\" : \"...\" } ] } In this example the openid , email , and profile scopes are requested. Additional scopes may be requested. Consult your provider's documentation regarding exposing scopes to clients. The profile and email scopes are required to populate first name, last name, and email fields in the SystemLink user preferences. These are derived from the given_name , family_name , and email claims respectively. Each scope contains claims you can map to roles within SystemLink workspaces. See Mapping OpenID Connect Claims to SystemLink Workspaces and Roles for details. The ni-attributes section determines the text and (optionally) an icon to be shown in the SystemLink login page. The iconUri is relative to htdocs directory ( C:\\Program Files\\National Instruments\\Shared\\Web Server\\htdocs ). This icon should be 16x16 px. SystemLink login windows with SSO login option. An icon has not been set in this example The keys section contains the private keys as a JWK Set if the provider uses asymmetric encryption for ID token key management. The corresponding public keys must be registered with the provider. The use property must have a value of enc to indicate the key is used for encryption. The kid property of the private key must match the kid property of the corresponding public key on the identity provider. The keys section can be omitted if the provider uses symmetric encryption or no encryption for ID token key management. ClientID and Secret \u00b6 The [provider-dns].client file is used by the NI Web Server to authenticate with the provider. { \"client_id\" : \"slserver\" , \"client_secret\" : \"4vFm89u07xaredactedredactedredactede2tjtsEGQhlLreLVjcyLA0\" } The client_id and client_secret can be obtained from the provider. Depending on the provider the client_id may be user defined. ClientID and Secret Provider Documentation \u00b6 PingFederate - Configuring an OAuth Client Using OAuth 2.0 to Access Google APIs Okta - Find your Application's credentials ADFS - Build a server side application using OAuth confidential clients with AD FS 2016 or later OpenID Connect Configuration and Discovery \u00b6 The [provider-dns].provider file includes the contents of the provider's OpenID Connect configuration. This file tells SystemLink which endpoints the provider exposes that are used during login. You may use curl to create this file. Replace [provider-dns] with the DNS of your OpenID Connect Provider. curl https:// [ provider-dns ] /.well-known/openid-configuration -o [ provider-dns ] .provider Setting Login Redirect URI \u00b6 The client configuration for your provider requires a redirect URL that is used during the login flow. This must be the fully qualified domain name, the protocol ( https:// or http:// ), and the port (if 80 or 443 are not used) of the SystemLink server. If the SystemLink server's DNS changes, update this setting with your provider. Note NI recommends the DNS name in the redirect URI match the the preferred hostname set in NI Web Server Configuration on the SystemLink server. The SystemLink login redirect URL \u00b6 Use the following URL to configure the login redirect url for your provider: [protocol]://[systemlink-dns]/login/openidc-redirect The SystemLink front channel logout URL \u00b6 This configuration is optional for OpenID Connect providers who support front channel logout. Use the following URL to configure the front channel logout URL your provider: [protocol]://[systemlink-dns]/login/openidc-redirect?logout=get Provider Client Configuration Documentation \u00b6 PingFederate - Configure an OAuth client Google - Using OAuth 2.0 for Web Server Applications Okta - Understand the callback route Supported Signing and Encryption Algorithms \u00b6 SystemLink supports the following algorithms for ID token signing, ID token key management encryption, and ID token content encryption. ID Token Signing Algorithm \u00b6 None ECDSA Using P256 Curve and SHA-256 ECDSA Using P384 Curve and SHA-384 ECDSA Using P521 Curve and SHA-512 HMAC using SHA-256 HMAC using SHA-384 HMAC using SHA-512 RSA using SHA-256 RSA using SHA-384 RSA using SHA-512 RSASSA-PSS using SHA-256 RSASSA-PSS using SHA-384 RSASSA-PSS using SHA-512 ID Token Key Management Encryption Algorithm \u00b6 Algorithms that do not require a private key: No encryption Direct Encryption with symmetric key AES-128 Key Wrap AES-192 Key Wrap AES-256 Key Wrap Algorithms that require a private key: RSAES OAEP ECDH-ES Refer to SystemLink Login Configuration for information on configuring the private key. ID Token Content Encryption Algorithm \u00b6 Composite AES-CBC-128 HMAC-SHA-256 Composite AES-CBC-192 HMAC-SHA-384 Composite AES-CBC-256 HMAC-SHA-512 Mapping OpenID Connect Claims to SystemLink Workspaces and Roles \u00b6 Map OpenID Connect claims to roles and workspaces so users can access systems and data managed by SystemLink. This process is the same as the mapping workflow for LDAP and Active Directory attributes. Refer to Assigning Users to Roles in a Workspace in the SystemLink manual. You can also use claims to create a mapping for the Server Administrator role. Viewing Claims Returned by a Provider \u00b6 The OpenID Connect provider determines which scopes and claims clients can access. To see available claims, use the userinfo_endpoint hosted by the provider. Use https://[provider-dns]/.well-known/openid-configuration to determine the URL of the userinfo_endpoint . You will need to obtain a valid bearer token to authenticate and access this endpoint. Example curl request to return user info. The bearer token has been truncated for readability. curl -s https://slsso-runtime.grl-us1.uat.k8s.com/idp/userinfo.openid -H 'Authorization: Bearer eyJhbGciOiJSUzI1NiI...zJVy2oLnrBmXTmpDRm499U4~' | python -m json.tool You can also view claims returned by a particular user by modifying the httpd configuration on your SystemLink server. Go to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\defines.d\\ and open 50_mod_auth_openidc-defines.conf in a text editor. Change the configuration UnDefine AUTH_OIDC_ENABLE_CLAIM_INFO to Define AUTH_OIDC_ENABLE_CLAIM_INFO . Restart NI Web Server. Go to [protocol]://[systemlink-dns]/login/openidc-redirect?info=html or [protocol]://[systemlink-dns]/login/openidc-redirect?info=json to view user claims. An example 50_mod_auth_openidc-defines.conf modified to expose user claims. You must be logged via OpenID Connect to receive data from this endpoint. # # Defined OpenID-Connect configuration for the Windows Apache installation. # # The name of the JSON map containing metadata about each identity provider. Define AUTH_OIDC_ATTRIBUTES_KEY ni-attributes # CA bundle to use when making requests to an identity provider. Define AUTH_OIDC_BUNDLE ../nicurl/ca-bundle.crt # Path to OIDC provider configuration. Define AUTH_OIDC_PROVIDER_DIR ${HTCONF_PATH}/openidc # The location to redirect when performing an OpenID-Connect login. Define AUTH_OIDC_REDIRECT_URI /login/openidc-redirect # # User-editable variables. # # Whether OIDC is enabled. Define AUTH_OIDC_ENABLED # When enabled, /login/openidc-redirect?info=json and # /login/openidc-redirect?info=html will return the claims for the currently # logged in user. Define AUTH_OIDC_ENABLE_CLAIM_INFO If the provider is https with a certificate signed by a CA not included in the NI-CURL CA bundle ( C:\\Program Files\\National Instruments\\Shared\\nicurl\\ca-bundle.crt ), then the AUTH_OIDC_PROVIDER_DIR define in 50_mod_auth_openidc-defines.conf must to be updated to point to a CA bundle containing the provider's CA. The path can be absolute, or relative to C:\\Program Files\\National Instruments\\Shared\\Web Server . Mapping Claims to SystemLink Roles \u00b6 Claims are returned as a JSON object. Example response from userinfo_endpoint . Use any of these claims to a map a user to a role in a workspace. { \"email\" : \"jane.doe@ni.com\" , \"family_name\" : \"Doe\" , \"given_name\" : \"Jane\" , \"name\" : \"Jane Doe\" , \"ni_employee\" : \"2670\" , \"sub\" : \"jdoe\" } Within the security UI the claim and its returned value can be mapped to a role within a Workspace. Mapping the ni_employee claim to a workspace. If the claim value is a scalar, then it must exactly match the value specified in the role mapping. If the claim value is an array, then one of the array elements must exactly match the value specified in the role mappings. If the claim value contains quotes the quotes must be escaped with \\. Example claim containing quotes { \"userinfo\" : { \"sub\" : \"88442211\" , \"country\" : \"US\" , \"name\" : \"Bob Smith\" , \"http://www.example.come/roles\" : [ \"user\" , \"a\\\"b\" ] } } Claims must be escaped with the \\ character. Refreshing user claims \u00b6 Claims are fetched at login. Log out and log back in for updated claims to affect role mappings. Troubleshooting Failed Authentication \u00b6 The following sources can be used to troubleshoot a failed connection. OpenID Connect Provider logs: Consult your OpenID Connect Provider's documentation on the location of their application log files. NI Web Server Logs: These are found at C:\\ProgramData\\National Instruments\\Web Server\\logs\\error.log . Note SystemLink uses log rotation therefore the latest logs may be in one of the numbered error.log files. Returned Claims: See Viewing Claims Returned by a Provider . Cache Entry Size \u00b6 The OpenID Connect module stores information in a shared memory cache. If a cache entry is too large, users will see an \"Internal Server Error\" when attempting to log in. This typically occurs when you are returning a large number of claims or claims with large values. Example error logs When this happens, the NI Web Server error logs will contain entries like the following: oidc_cache_shm_set: could not store value since value size is too large oidc_cache_set: could NOT store X bytes in shm cache backend for key Y To resolve this issue: Open the following file in a text editor run as Administrator: C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\defines.d\\50_mod_auth_openidc-defines.conf Find the line starting with Define AUTH_OIDC_CACHE_ENTRY_SIZE . Modify the number at the end to a number larger than X, where X is the required size of the cache entry specified in the error log. Restart the NI Web Server from the Control tab of the NI Web Server Configuration application. ID Token Management Encryption \u00b6 The following situations can lead to an error and redirect the user back to the SystemLink login page after authenticating with the OpenID Connect provider: The provider is using an asymmetric ID token management encryption algorithm and private keys are missing or incorrect The provider is using an unsupported ID token management encryption algorithm Example error logs The error will be reported in the NI Web Server error logs: oidc_proto_parse_idtoken: oidc_jwt_parse failed The log entry will also contain more information about the problem. To resolve this issue: Confirm that the provider is using supported encryption and signing algorithms. See Supported Signing and Encryption Algorithms . Consult your provider's documentation for information on setting the encryption and signing algorithms. If the provider is using asymmetric ID token management encryption, confirm that the private key is configured in [provider-dns] .conf and the corresponding public key is configured in the provider. Refer to SystemLink Login Configuration for information on configuring the private key. Consult your provider's documentation for information on configuring the ID token management encryption algorithm and public key.","title":"Single Sign-on with OpenID Connect"},{"location":"openid-connect/openid-connect/#single-sign-on-with-openid-connect","text":"You can configure SystemLink to use OpenID Connect to authorize users. This enables SystemLink to use a common identity for users across multiple applications. This also means SystemLink leverages corporate single sign-on (SSO) and all its security benefits, such as streamlined login and limiting user credential proliferation. You can use OpenID Connect alongside or as a replacement for LDAP, Active Directory, and local Windows accounts for authentication.","title":"Single Sign-on with OpenID Connect"},{"location":"openid-connect/openid-connect/#assumptions-and-prerequisites","text":"A server running SystemLink 2020R4 or greater. Refer to Installing and Configuring SystemLink Server and Clients for the basics of setting up a SystemLink server A DNS name for the SystemLink server SystemLink login with the Server Administrator role Administrator desktop access to the SystemLink server An OpenID Connect Provider server such as PingFederate , Azure ADFS , Okta , or another certified provider that has been fully setup and configured for OpenID Connect authentication","title":"Assumptions and Prerequisites"},{"location":"openid-connect/openid-connect/#enabling-openid-connect-in-systemlink","text":"Log into the server running SystemLink and go to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\openidc . Add the configuration files to SystemLink to connect to your OpenID Connect provider. For details, refer to OpenID Connect Configuration Files in SystemLink Server . Open NI Web Server Configuration . Go to the Authentication tab and enable Use OpenID Connect (advanced) . Click Apply and restart . Login into the SystemLink web application with a user assigned the Server Administrator role. Go to Security > Roles and click the gear icon in the top right. Add an OpenID Connect Claim mapping for the Server Administrator role. For details, refer to Mapping OpenID Connect Claims to SystemLink Workspaces and Roles . Log out and log in as an OpenID Connect user with a mapping for the Server Administrator role and confirm they have the correct privileges. Enable OpenID Connect in NI Web Server","title":"Enabling OpenID Connect in SystemLink"},{"location":"openid-connect/openid-connect/#openid-connect-configuration-files-in-systemlink-server","text":"There are three files that you must create to connect your SystemLink server to an OpenID Connect provider: [provider-dns].conf , [provider-dns].client , and [provider-dns].provider . The [provider-dns] portion of each filename must be the URL-encoded fully qualified domain name. Refer to openid-connect-config for examples of each of these files. Example An OpenID Connect provider with the DNS example.com:9999 would yield files named example.com%3a9999.conf , example.com%3a9999.client , and example.com%3a9999.provider . These files do not exist for new SystemLink installations. Add each file to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\openidc . Restart the NI Web Server to apply changes. You can configure SystemLink to support multiple OpenID Connect providers simultaneously by creating a [provider-dns].conf , [provider-dns].client , and [provider-dns].provider file for each provider. The user ID in SystemLink must be unique across providers. This ID takes the form [sub_claim]@issuer . You can see the ID SystemLink associates with a user in the user details in SystemLink Security.","title":"OpenID Connect Configuration Files in SystemLink Server"},{"location":"openid-connect/openid-connect/#systemlink-login-configuration","text":"[provider-dns].conf describes the scopes SystemLink will request, the text and icon for the provider login button, and private keys for ID token key management encryption. { \"scope\" : \"openid email profile\" , \"ni-attributes\" : { \"displayName\" : \"Log in with PingFederate\" , \"iconUri\" : \"/login/assets/pf.png\" }, \"keys\" : [ { \"p\" : \"...\" , \"kty\" : \"RSA\" , \"q\" : \"...\" , \"d\" : \"...\" , \"e\" : \"AQAB\" , \"use\" : \"enc\" , \"kid\" : \"2020-11-20\" , \"qi\" : \"...\" , \"dp\" : \"...\" , \"dq\" : \"...\" , \"n\" : \"...\" } ] } In this example the openid , email , and profile scopes are requested. Additional scopes may be requested. Consult your provider's documentation regarding exposing scopes to clients. The profile and email scopes are required to populate first name, last name, and email fields in the SystemLink user preferences. These are derived from the given_name , family_name , and email claims respectively. Each scope contains claims you can map to roles within SystemLink workspaces. See Mapping OpenID Connect Claims to SystemLink Workspaces and Roles for details. The ni-attributes section determines the text and (optionally) an icon to be shown in the SystemLink login page. The iconUri is relative to htdocs directory ( C:\\Program Files\\National Instruments\\Shared\\Web Server\\htdocs ). This icon should be 16x16 px. SystemLink login windows with SSO login option. An icon has not been set in this example The keys section contains the private keys as a JWK Set if the provider uses asymmetric encryption for ID token key management. The corresponding public keys must be registered with the provider. The use property must have a value of enc to indicate the key is used for encryption. The kid property of the private key must match the kid property of the corresponding public key on the identity provider. The keys section can be omitted if the provider uses symmetric encryption or no encryption for ID token key management.","title":"SystemLink Login Configuration"},{"location":"openid-connect/openid-connect/#clientid-and-secret","text":"The [provider-dns].client file is used by the NI Web Server to authenticate with the provider. { \"client_id\" : \"slserver\" , \"client_secret\" : \"4vFm89u07xaredactedredactedredactede2tjtsEGQhlLreLVjcyLA0\" } The client_id and client_secret can be obtained from the provider. Depending on the provider the client_id may be user defined.","title":"ClientID and Secret"},{"location":"openid-connect/openid-connect/#clientid-and-secret-provider-documentation","text":"PingFederate - Configuring an OAuth Client Using OAuth 2.0 to Access Google APIs Okta - Find your Application's credentials ADFS - Build a server side application using OAuth confidential clients with AD FS 2016 or later","title":"ClientID and Secret Provider Documentation"},{"location":"openid-connect/openid-connect/#openid-connect-configuration-and-discovery","text":"The [provider-dns].provider file includes the contents of the provider's OpenID Connect configuration. This file tells SystemLink which endpoints the provider exposes that are used during login. You may use curl to create this file. Replace [provider-dns] with the DNS of your OpenID Connect Provider. curl https:// [ provider-dns ] /.well-known/openid-configuration -o [ provider-dns ] .provider","title":"OpenID Connect Configuration and Discovery"},{"location":"openid-connect/openid-connect/#setting-login-redirect-uri","text":"The client configuration for your provider requires a redirect URL that is used during the login flow. This must be the fully qualified domain name, the protocol ( https:// or http:// ), and the port (if 80 or 443 are not used) of the SystemLink server. If the SystemLink server's DNS changes, update this setting with your provider. Note NI recommends the DNS name in the redirect URI match the the preferred hostname set in NI Web Server Configuration on the SystemLink server.","title":"Setting Login Redirect URI"},{"location":"openid-connect/openid-connect/#the-systemlink-login-redirect-url","text":"Use the following URL to configure the login redirect url for your provider: [protocol]://[systemlink-dns]/login/openidc-redirect","title":"The SystemLink login redirect URL"},{"location":"openid-connect/openid-connect/#the-systemlink-front-channel-logout-url","text":"This configuration is optional for OpenID Connect providers who support front channel logout. Use the following URL to configure the front channel logout URL your provider: [protocol]://[systemlink-dns]/login/openidc-redirect?logout=get","title":"The SystemLink front channel logout URL"},{"location":"openid-connect/openid-connect/#provider-client-configuration-documentation","text":"PingFederate - Configure an OAuth client Google - Using OAuth 2.0 for Web Server Applications Okta - Understand the callback route","title":"Provider Client Configuration Documentation"},{"location":"openid-connect/openid-connect/#supported-signing-and-encryption-algorithms","text":"SystemLink supports the following algorithms for ID token signing, ID token key management encryption, and ID token content encryption.","title":"Supported Signing and Encryption Algorithms"},{"location":"openid-connect/openid-connect/#id-token-signing-algorithm","text":"None ECDSA Using P256 Curve and SHA-256 ECDSA Using P384 Curve and SHA-384 ECDSA Using P521 Curve and SHA-512 HMAC using SHA-256 HMAC using SHA-384 HMAC using SHA-512 RSA using SHA-256 RSA using SHA-384 RSA using SHA-512 RSASSA-PSS using SHA-256 RSASSA-PSS using SHA-384 RSASSA-PSS using SHA-512","title":"ID Token Signing Algorithm"},{"location":"openid-connect/openid-connect/#id-token-key-management-encryption-algorithm","text":"Algorithms that do not require a private key: No encryption Direct Encryption with symmetric key AES-128 Key Wrap AES-192 Key Wrap AES-256 Key Wrap Algorithms that require a private key: RSAES OAEP ECDH-ES Refer to SystemLink Login Configuration for information on configuring the private key.","title":"ID Token Key Management Encryption Algorithm"},{"location":"openid-connect/openid-connect/#id-token-content-encryption-algorithm","text":"Composite AES-CBC-128 HMAC-SHA-256 Composite AES-CBC-192 HMAC-SHA-384 Composite AES-CBC-256 HMAC-SHA-512","title":"ID Token Content Encryption Algorithm"},{"location":"openid-connect/openid-connect/#mapping-openid-connect-claims-to-systemlink-workspaces-and-roles","text":"Map OpenID Connect claims to roles and workspaces so users can access systems and data managed by SystemLink. This process is the same as the mapping workflow for LDAP and Active Directory attributes. Refer to Assigning Users to Roles in a Workspace in the SystemLink manual. You can also use claims to create a mapping for the Server Administrator role.","title":"Mapping OpenID Connect Claims to SystemLink Workspaces and Roles"},{"location":"openid-connect/openid-connect/#viewing-claims-returned-by-a-provider","text":"The OpenID Connect provider determines which scopes and claims clients can access. To see available claims, use the userinfo_endpoint hosted by the provider. Use https://[provider-dns]/.well-known/openid-configuration to determine the URL of the userinfo_endpoint . You will need to obtain a valid bearer token to authenticate and access this endpoint. Example curl request to return user info. The bearer token has been truncated for readability. curl -s https://slsso-runtime.grl-us1.uat.k8s.com/idp/userinfo.openid -H 'Authorization: Bearer eyJhbGciOiJSUzI1NiI...zJVy2oLnrBmXTmpDRm499U4~' | python -m json.tool You can also view claims returned by a particular user by modifying the httpd configuration on your SystemLink server. Go to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\defines.d\\ and open 50_mod_auth_openidc-defines.conf in a text editor. Change the configuration UnDefine AUTH_OIDC_ENABLE_CLAIM_INFO to Define AUTH_OIDC_ENABLE_CLAIM_INFO . Restart NI Web Server. Go to [protocol]://[systemlink-dns]/login/openidc-redirect?info=html or [protocol]://[systemlink-dns]/login/openidc-redirect?info=json to view user claims. An example 50_mod_auth_openidc-defines.conf modified to expose user claims. You must be logged via OpenID Connect to receive data from this endpoint. # # Defined OpenID-Connect configuration for the Windows Apache installation. # # The name of the JSON map containing metadata about each identity provider. Define AUTH_OIDC_ATTRIBUTES_KEY ni-attributes # CA bundle to use when making requests to an identity provider. Define AUTH_OIDC_BUNDLE ../nicurl/ca-bundle.crt # Path to OIDC provider configuration. Define AUTH_OIDC_PROVIDER_DIR ${HTCONF_PATH}/openidc # The location to redirect when performing an OpenID-Connect login. Define AUTH_OIDC_REDIRECT_URI /login/openidc-redirect # # User-editable variables. # # Whether OIDC is enabled. Define AUTH_OIDC_ENABLED # When enabled, /login/openidc-redirect?info=json and # /login/openidc-redirect?info=html will return the claims for the currently # logged in user. Define AUTH_OIDC_ENABLE_CLAIM_INFO If the provider is https with a certificate signed by a CA not included in the NI-CURL CA bundle ( C:\\Program Files\\National Instruments\\Shared\\nicurl\\ca-bundle.crt ), then the AUTH_OIDC_PROVIDER_DIR define in 50_mod_auth_openidc-defines.conf must to be updated to point to a CA bundle containing the provider's CA. The path can be absolute, or relative to C:\\Program Files\\National Instruments\\Shared\\Web Server .","title":"Viewing Claims Returned by a Provider"},{"location":"openid-connect/openid-connect/#mapping-claims-to-systemlink-roles","text":"Claims are returned as a JSON object. Example response from userinfo_endpoint . Use any of these claims to a map a user to a role in a workspace. { \"email\" : \"jane.doe@ni.com\" , \"family_name\" : \"Doe\" , \"given_name\" : \"Jane\" , \"name\" : \"Jane Doe\" , \"ni_employee\" : \"2670\" , \"sub\" : \"jdoe\" } Within the security UI the claim and its returned value can be mapped to a role within a Workspace. Mapping the ni_employee claim to a workspace. If the claim value is a scalar, then it must exactly match the value specified in the role mapping. If the claim value is an array, then one of the array elements must exactly match the value specified in the role mappings. If the claim value contains quotes the quotes must be escaped with \\. Example claim containing quotes { \"userinfo\" : { \"sub\" : \"88442211\" , \"country\" : \"US\" , \"name\" : \"Bob Smith\" , \"http://www.example.come/roles\" : [ \"user\" , \"a\\\"b\" ] } } Claims must be escaped with the \\ character.","title":"Mapping Claims to SystemLink Roles"},{"location":"openid-connect/openid-connect/#refreshing-user-claims","text":"Claims are fetched at login. Log out and log back in for updated claims to affect role mappings.","title":"Refreshing user claims"},{"location":"openid-connect/openid-connect/#troubleshooting-failed-authentication","text":"The following sources can be used to troubleshoot a failed connection. OpenID Connect Provider logs: Consult your OpenID Connect Provider's documentation on the location of their application log files. NI Web Server Logs: These are found at C:\\ProgramData\\National Instruments\\Web Server\\logs\\error.log . Note SystemLink uses log rotation therefore the latest logs may be in one of the numbered error.log files. Returned Claims: See Viewing Claims Returned by a Provider .","title":"Troubleshooting Failed Authentication"},{"location":"openid-connect/openid-connect/#cache-entry-size","text":"The OpenID Connect module stores information in a shared memory cache. If a cache entry is too large, users will see an \"Internal Server Error\" when attempting to log in. This typically occurs when you are returning a large number of claims or claims with large values. Example error logs When this happens, the NI Web Server error logs will contain entries like the following: oidc_cache_shm_set: could not store value since value size is too large oidc_cache_set: could NOT store X bytes in shm cache backend for key Y To resolve this issue: Open the following file in a text editor run as Administrator: C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\defines.d\\50_mod_auth_openidc-defines.conf Find the line starting with Define AUTH_OIDC_CACHE_ENTRY_SIZE . Modify the number at the end to a number larger than X, where X is the required size of the cache entry specified in the error log. Restart the NI Web Server from the Control tab of the NI Web Server Configuration application.","title":"Cache Entry Size"},{"location":"openid-connect/openid-connect/#id-token-management-encryption","text":"The following situations can lead to an error and redirect the user back to the SystemLink login page after authenticating with the OpenID Connect provider: The provider is using an asymmetric ID token management encryption algorithm and private keys are missing or incorrect The provider is using an unsupported ID token management encryption algorithm Example error logs The error will be reported in the NI Web Server error logs: oidc_proto_parse_idtoken: oidc_jwt_parse failed The log entry will also contain more information about the problem. To resolve this issue: Confirm that the provider is using supported encryption and signing algorithms. See Supported Signing and Encryption Algorithms . Consult your provider's documentation for information on setting the encryption and signing algorithms. If the provider is using asymmetric ID token management encryption, confirm that the private key is configured in [provider-dns] .conf and the corresponding public key is configured in the provider. Refer to SystemLink Login Configuration for information on configuring the private key. Consult your provider's documentation for information on configuring the ID token management encryption algorithm and public key.","title":"ID Token Management Encryption"},{"location":"python-dataplugins/python-dataplugins/","text":"Python DataPlugins \u00b6 Create a DataPlugin to load, register, or search your custom file formats in LabVIEW or DIAdem, or to index, browse, and find your file formats with SystemLink DataFinder. You can also create DataPlugins using C++, VBS, LabVIEW, or Python. Note Browse through 230+ DataPlugins in the NI Store to check whether there is an existing DataPlugin for your data format. Getting Started \u00b6 Python DataPlugins consist of only one Python file that contains all the logic. Almost all language features of the official Python 3.5.9 and its base libraries can be used. You can create Python DataPlugins in your favorite editor. Recommended: DIAdem >= 2020 VSCode with the NI Python DataPlugin Extension Plugin Class \u00b6 Start writing your DataPlugin by implementing class Plugin : The class name cannot be changed. Read Store \u00b6 You need to implement a read_store method in every Python DataPlugin. This method is called by DIAdem, LabVIEW, or SystemLink DataFinder when attempting to open your data file. The applications pass a set of useful parameters that can be accessed by the parameter array. Example Code import datetime import os from pathlib import Path def read_store ( self , parameter ): \"\"\" Reads data file and returns a Python dictionary that contains groups and channels in a TDM-like structure. \"\"\" # String: Contains the absolute path to the data file file_path = os . path . realpath ( parameter [ \"file\" ]) # Boolean: Denotes whether data file was accessed by SystemLink DataFinder # => the bulk data was not touched. is_datafinder_indexer = parameter [ \"datafinder\" ] tdm_tree = { \"author\" : \"NI\" , \"description\" : \"File containing a json dict read by Python plugin\" , \"groups\" : [{ \"name\" : \"Group_1\" , \"description\" : \"First group\" , \"channels\" : [{ \"name\" : \"Index\" , \"description\" : \"\" , \"info\" : \"Going up\" , \"unit_string\" : \"s\" , \"type\" : \"DataTypeChnFloat64\" , \"values\" : [ 1 , 2 , 3 ] }, { \"name\" : \"Vals_1\" , \"description\" : \"\" , \"unit_string\" : \"km/h\" , \"type\" : \"DataTypeChnFloat64\" , \"values\" : [ 1.1 , 2.1 , 3.1 ] }, { \"name\" : \"Vals_2\" , \"description\" : \"\" , \"unit_string\" : \"km/h\" , \"type\" : \"DataTypeChnFloat64\" , \"values\" : [ 1.2 , 2.2 , 3.2 ] }, { \"name\" : \"Str_1\" , \"description\" : \"\" , \"type\" : \"DataTypeChnString\" , \"values\" : [ \"abc\" , \"def\" , \"hij\" ] }] }, { \"name\" : \"Group_2\" , \"description\" : \"Second group\" , \"channels\" : [{ \"name\" : \"Index\" , \"description\" : \"\" , \"info\" : \"Going up\" , \"unit_string\" : \"s\" , \"type\" : \"DataTypeChnFloat64\" , \"values\" : [ 1 , 2 , 3 , 4 ] } ] }] } return { Path ( file_path ) . stem : tdm_tree } Use the file parameter to access your file using text, CSV, or binary readers. The data must be added to a Python dictionary. It represents the structure of tdm/tdms files that consists of one root, 0...m groups, and 0...n channels: TDM structure with root, groups, and channels Example dictionary self . tdm_tree = { \"author\" : \"NI\" , \"description\" : \"Example file\" , \"groups\" : [{ \"name\" : \"Example\" , \"description\" : \"First group\" , \"time\" : datetime . datetime ( 2020 , 2 , 11 , 15 , 31 , 59 , 342380 ), \"channels\" : [{ \"name\" : \"Channel_0\" , \"description\" : \"\" , \"values\" : [ 1.2 , 1.3 , 1.4 ], \"info\" : \"Time in seconds\" , \"type\" : \"DataTypeChnFloat64\" }, { \"name\" : \"Channel_1\" , \"description\" : \"\" , \"values\" : [ 10 , 11 , 12 ], \"unit_string\" : \"km/h\" , \"type\" : \"DataTypeChnFloat64\" }] }] } file_path = os . path . realpath ( parameter [ \"file\" ]) return { Path ( file_path ) . stem : self . tdm_tree } Dictionary Schema import datetime from schema import And , Schema Schema ({ Optional ( 'author' ): str , Optional ( 'description' ): str , 'groups' : [{ 'name' : str , Optional ( 'description' ): str , Optional ( 'time' ): datetime . datetime , 'channels' : [{ 'name' : str , Optional ( 'description' ): str , 'values' : list , Optional ( 'unit_string' ): str , 'type' : And ( str , lambda s : s in ( 'DataTypeChnFloat32' , 'DataTypeChnFloat64' , 'DataTypeChnString' , 'DataTypeChnDate' , 'DataTypeChnUInt8' , 'DataTypeChnInt16' , 'DataTypeChnInt32' , 'DataTypeChnInt64' )) }] }]}, ignore_extra_keys = True ) All additional \"extra keys\" will show up as custom properties in DIAdem, Labview, or SystemLink DataFinder. See full example: csv-read-with-direct-loading Callback Loading \u00b6 When handling a big data set, you might not want to load all data at the same time. To ensure the DataPlugin only returns values that applications request: Assign an empty array to the channel values property: ... 'groups' : [{ ... 'channels' : [{ ... 'values' : [], }] }] Outsource the functionality to load the bulk data values in a separate function. The function has the following definition: def read_channel_values ( self , grp_index , chn_index , numberToSkip , numberToTake ): \"\"\" Returns a value array of the correct data type specified in the TDM dictionary \"\"\" Example Code def read_channel_values ( self , grp_index , chn_index , numberToSkip , numberToTake ): dataType = self . tdm_tree [ \"groups\" ][ grp_index ][ \"channels\" ][ chn_index ][ \"type\" ] values = [] for row in self . data : value = row [ self . channelNames [ chn_index ]] values . append ( value ) return values [ numberToSkip : numberToTake + numberToSkip ] The client applications call this function to retrieve channel values (or a subset of values). You need to implement the function to return the values for a given group and channel index. You also need to ensure only the correct subset of values is returned for a given numberToSkip and numberToTake . In addition, you need to implement a callback function to retrieve the channel length. If all channels have the same length, it simply returns a constant. def read_channel_length ( self , grp_index , chn_index ): \"\"\" Returns the channel length as an Integer for a given group and channel index \"\"\" return 10 See full example: csv-read-with-callback-loading Error Handling \u00b6 Python DataPlugins can raise errors in all callback functions. The raised error is displayed in DIAdem, LabVIEW, or SystemLink DataFinder. def read_store ( self , parameter ): ... raise Exception ( \"Leave read_store with exception\" ) Not My File \u00b6 A special case is \"Not My File\". This error should be raised when the DataPlugin detects that the file to be opened is not suited for this DataPlugin. This special error can be raised only in the read_store function by returning None : def read_store ( self , parameter ): ... if notMyFile : return None Export DataPlugin \u00b6 Export Python DataPlugins to make them available on other systems. Use DIAdem to export a DataPlugin as a URI file. Exporting DataPlugins in DIAdem Known Limitations \u00b6 NumPy and Pandas \u00b6 Unfortunately, NumPy and Pandas are not well supported to run in embedded Python environments and, therefore, cannot be used in DataPlugins. Single File DataPlugins \u00b6 Python DataPlugins can only be written in a single Python file. Importing sidecar files is not supported. It will fail when exporting the DataPlugin as a URI. datetime.strptime \u00b6 There is an open issue in Python for datetime.strptime that prevents the function from working properly in embedded Python environments. Avoid using this function in DataPlugin source code. Instead, add the following function to your code: def strptime ( self , value , format ): return datetime . datetime ( * ( time . strptime ( value , \" %d .%m.%y %H:%M:%S\" )[ 0 : 6 ]))","title":"Python DataPlugins"},{"location":"python-dataplugins/python-dataplugins/#python-dataplugins","text":"Create a DataPlugin to load, register, or search your custom file formats in LabVIEW or DIAdem, or to index, browse, and find your file formats with SystemLink DataFinder. You can also create DataPlugins using C++, VBS, LabVIEW, or Python. Note Browse through 230+ DataPlugins in the NI Store to check whether there is an existing DataPlugin for your data format.","title":"Python DataPlugins"},{"location":"python-dataplugins/python-dataplugins/#getting-started","text":"Python DataPlugins consist of only one Python file that contains all the logic. Almost all language features of the official Python 3.5.9 and its base libraries can be used. You can create Python DataPlugins in your favorite editor. Recommended: DIAdem >= 2020 VSCode with the NI Python DataPlugin Extension","title":"Getting Started"},{"location":"python-dataplugins/python-dataplugins/#plugin-class","text":"Start writing your DataPlugin by implementing class Plugin : The class name cannot be changed.","title":"Plugin Class"},{"location":"python-dataplugins/python-dataplugins/#read-store","text":"You need to implement a read_store method in every Python DataPlugin. This method is called by DIAdem, LabVIEW, or SystemLink DataFinder when attempting to open your data file. The applications pass a set of useful parameters that can be accessed by the parameter array. Example Code import datetime import os from pathlib import Path def read_store ( self , parameter ): \"\"\" Reads data file and returns a Python dictionary that contains groups and channels in a TDM-like structure. \"\"\" # String: Contains the absolute path to the data file file_path = os . path . realpath ( parameter [ \"file\" ]) # Boolean: Denotes whether data file was accessed by SystemLink DataFinder # => the bulk data was not touched. is_datafinder_indexer = parameter [ \"datafinder\" ] tdm_tree = { \"author\" : \"NI\" , \"description\" : \"File containing a json dict read by Python plugin\" , \"groups\" : [{ \"name\" : \"Group_1\" , \"description\" : \"First group\" , \"channels\" : [{ \"name\" : \"Index\" , \"description\" : \"\" , \"info\" : \"Going up\" , \"unit_string\" : \"s\" , \"type\" : \"DataTypeChnFloat64\" , \"values\" : [ 1 , 2 , 3 ] }, { \"name\" : \"Vals_1\" , \"description\" : \"\" , \"unit_string\" : \"km/h\" , \"type\" : \"DataTypeChnFloat64\" , \"values\" : [ 1.1 , 2.1 , 3.1 ] }, { \"name\" : \"Vals_2\" , \"description\" : \"\" , \"unit_string\" : \"km/h\" , \"type\" : \"DataTypeChnFloat64\" , \"values\" : [ 1.2 , 2.2 , 3.2 ] }, { \"name\" : \"Str_1\" , \"description\" : \"\" , \"type\" : \"DataTypeChnString\" , \"values\" : [ \"abc\" , \"def\" , \"hij\" ] }] }, { \"name\" : \"Group_2\" , \"description\" : \"Second group\" , \"channels\" : [{ \"name\" : \"Index\" , \"description\" : \"\" , \"info\" : \"Going up\" , \"unit_string\" : \"s\" , \"type\" : \"DataTypeChnFloat64\" , \"values\" : [ 1 , 2 , 3 , 4 ] } ] }] } return { Path ( file_path ) . stem : tdm_tree } Use the file parameter to access your file using text, CSV, or binary readers. The data must be added to a Python dictionary. It represents the structure of tdm/tdms files that consists of one root, 0...m groups, and 0...n channels: TDM structure with root, groups, and channels Example dictionary self . tdm_tree = { \"author\" : \"NI\" , \"description\" : \"Example file\" , \"groups\" : [{ \"name\" : \"Example\" , \"description\" : \"First group\" , \"time\" : datetime . datetime ( 2020 , 2 , 11 , 15 , 31 , 59 , 342380 ), \"channels\" : [{ \"name\" : \"Channel_0\" , \"description\" : \"\" , \"values\" : [ 1.2 , 1.3 , 1.4 ], \"info\" : \"Time in seconds\" , \"type\" : \"DataTypeChnFloat64\" }, { \"name\" : \"Channel_1\" , \"description\" : \"\" , \"values\" : [ 10 , 11 , 12 ], \"unit_string\" : \"km/h\" , \"type\" : \"DataTypeChnFloat64\" }] }] } file_path = os . path . realpath ( parameter [ \"file\" ]) return { Path ( file_path ) . stem : self . tdm_tree } Dictionary Schema import datetime from schema import And , Schema Schema ({ Optional ( 'author' ): str , Optional ( 'description' ): str , 'groups' : [{ 'name' : str , Optional ( 'description' ): str , Optional ( 'time' ): datetime . datetime , 'channels' : [{ 'name' : str , Optional ( 'description' ): str , 'values' : list , Optional ( 'unit_string' ): str , 'type' : And ( str , lambda s : s in ( 'DataTypeChnFloat32' , 'DataTypeChnFloat64' , 'DataTypeChnString' , 'DataTypeChnDate' , 'DataTypeChnUInt8' , 'DataTypeChnInt16' , 'DataTypeChnInt32' , 'DataTypeChnInt64' )) }] }]}, ignore_extra_keys = True ) All additional \"extra keys\" will show up as custom properties in DIAdem, Labview, or SystemLink DataFinder. See full example: csv-read-with-direct-loading","title":"Read Store"},{"location":"python-dataplugins/python-dataplugins/#callback-loading","text":"When handling a big data set, you might not want to load all data at the same time. To ensure the DataPlugin only returns values that applications request: Assign an empty array to the channel values property: ... 'groups' : [{ ... 'channels' : [{ ... 'values' : [], }] }] Outsource the functionality to load the bulk data values in a separate function. The function has the following definition: def read_channel_values ( self , grp_index , chn_index , numberToSkip , numberToTake ): \"\"\" Returns a value array of the correct data type specified in the TDM dictionary \"\"\" Example Code def read_channel_values ( self , grp_index , chn_index , numberToSkip , numberToTake ): dataType = self . tdm_tree [ \"groups\" ][ grp_index ][ \"channels\" ][ chn_index ][ \"type\" ] values = [] for row in self . data : value = row [ self . channelNames [ chn_index ]] values . append ( value ) return values [ numberToSkip : numberToTake + numberToSkip ] The client applications call this function to retrieve channel values (or a subset of values). You need to implement the function to return the values for a given group and channel index. You also need to ensure only the correct subset of values is returned for a given numberToSkip and numberToTake . In addition, you need to implement a callback function to retrieve the channel length. If all channels have the same length, it simply returns a constant. def read_channel_length ( self , grp_index , chn_index ): \"\"\" Returns the channel length as an Integer for a given group and channel index \"\"\" return 10 See full example: csv-read-with-callback-loading","title":"Callback Loading"},{"location":"python-dataplugins/python-dataplugins/#error-handling","text":"Python DataPlugins can raise errors in all callback functions. The raised error is displayed in DIAdem, LabVIEW, or SystemLink DataFinder. def read_store ( self , parameter ): ... raise Exception ( \"Leave read_store with exception\" )","title":"Error Handling"},{"location":"python-dataplugins/python-dataplugins/#not-my-file","text":"A special case is \"Not My File\". This error should be raised when the DataPlugin detects that the file to be opened is not suited for this DataPlugin. This special error can be raised only in the read_store function by returning None : def read_store ( self , parameter ): ... if notMyFile : return None","title":"Not My File"},{"location":"python-dataplugins/python-dataplugins/#export-dataplugin","text":"Export Python DataPlugins to make them available on other systems. Use DIAdem to export a DataPlugin as a URI file. Exporting DataPlugins in DIAdem","title":"Export DataPlugin"},{"location":"python-dataplugins/python-dataplugins/#known-limitations","text":"","title":"Known Limitations"},{"location":"python-dataplugins/python-dataplugins/#numpy-and-pandas","text":"Unfortunately, NumPy and Pandas are not well supported to run in embedded Python environments and, therefore, cannot be used in DataPlugins.","title":"NumPy and Pandas"},{"location":"python-dataplugins/python-dataplugins/#single-file-dataplugins","text":"Python DataPlugins can only be written in a single Python file. Importing sidecar files is not supported. It will fail when exporting the DataPlugin as a URI.","title":"Single File DataPlugins"},{"location":"python-dataplugins/python-dataplugins/#datetimestrptime","text":"There is an open issue in Python for datetime.strptime that prevents the function from working properly in embedded Python environments. Avoid using this function in DataPlugin source code. Instead, add the following function to your code: def strptime ( self , value , format ): return datetime . datetime ( * ( time . strptime ( value , \" %d .%m.%y %H:%M:%S\" )[ 0 : 6 ]))","title":"datetime.strptime"},{"location":"rbac/rbac/","text":"Workspaces and Role-based Access Control \u00b6 The SystemLink role-based access control (RBAC) system provides strong isolation between different workspaces as well as fine grain privileges for systems, data, and analysis routines in SystemLink. Collectively this capability allows access to SystemLink to scale user and data access beyond a single team to an entire organization. Concepts \u00b6 SystemLink RBAC leverages common concepts such as roles and users . It also introduces concepts such as workspaces and automatic data encapsulation to ensure strict access control of data produced by test systems. Role-based access control concepts in SystemLink Workspace \u00b6 A workspace is a complete encapsulation of all systems, data, and other resources within SystemLink. A user must be a member of a workspace to access the systems and data within the workspace. This is true for access via the SystemLink web application and the SystemLink REST API. SystemLink always has at least one workspace, Default created at install time. Like all workspaces,the default workspace may be renamed or archived , but it has a additional properties to support backwards compatibility with pre-2020R1 SystemLink clients. Properties of the Default workspace All clients using AMQP for network communication exclusively publish data to the default workspace. All pre-2020R1 clients using HTTP for network communication exclusively publish data to the default workspace. OPC UA and Cloud Connector sessions always exist in the default workspace and may only access tags in the default workspace. File moving rules always exist in the default workspace and may only access files in the default workspace. Health tags for the SystemLink server are always published to the default workspace. The SystemLink Advanced Server license is required to create multiple workspaces, but there is no limit on the number of workspaces that can be created. Refer to the SystemLink Manual for steps to create a workspace. Two workspaces with unique resources in each workspace. Resources users can access are determined by their workspace membership. The actions a user can take on each resource is determined by their role. Systems, data, and analysis routines (collectively referred to as resources) are unique to individual workspaces. No resource occupies multiple workspaces. Some resources may be moved between workspaces. If a resource is duplicated the user is prompted to choose a workspace for the new resource. Exceptions for Workspaces \u00b6 The following resources in SystemLink have limitations or exceptions from the broader rules described above. DataFinder : DataFinder instances are global (meaning any user can view the DataFinder instance), but DataFinder Search Areas defined within a DataFinder instance are scoped to a single workspace. Search areas can only index File Ingestion Service data for the DataFinder Search Area's corresponding workspace. All indexed files of a search area are available only to members of the corresponding workspace. Notifications : Notification strategies, groups, and email templates are not scoped to a single workspace. These may be used with any alarm rule regardless of the workspace of the alarm rule. Roles may still restrict access to notification configuration. Jupyter Notebook : Jupyter Notebooks are not managed by SystemLink's RBAC. Refer to Sharing a Jupyter Notebook for details on how to allow multiple users collaborate with Notebooks. Archived Workspaces \u00b6 Workspaces may be archived if they are no longer in use. Archival does not delete resources or move resources to a new database or file storage location. Archived workspaces are only accessible to users with the Server Administrator role. Resources in archived workspaces cannot be created, updated, or deleted. Resources may be duplicated or moved into a non-archived workspace. All active alarms are automatically cleared when a workspace is archived. Refer to the SystemLink manual for steps to manage archived workspaces. Users and Roles \u00b6 Roles define the privileges a user, system or analysis procedure may take against resources within SystemLink. While roles are applied within the context of a workspace , roles is defined globally. This enables the same role to be used across multiple workspaces. Refer to the SystemLink manual for steps to manage roles. Role privileges explicitly grant what you can do - there are no deny privileges. Due to this a user may be assigned multiple roles within a single workspace that collectively describe what the user has access to. This is useful to prevent the proliferation of multiple different roles that have similar privileges. Instead, simple roles may be defined and composed together by assigning a user each role. Allow all privileges In each area of available privileges there is an Allow all privileges option. This privilege automatically grants all privileges for that area. If a new privilege is in a future version of SystemLink, users with Allow all privileges will automatically be granted the new privilege upon upgrade. If this behavior is undesirable, refrain from using Allow all privileges . All privileges for an area are granted when Allow all privileges is checked. Built-in and Custom Roles \u00b6 When creating and assigning roles , it is best practice to provide users with the minimum number of privileges to perform their work. SystemLink has granular privileges for services and application in the product. These privileges also include access to individual SystemLink applications such as Systems Manager and Test Monitor . Note If a user has a role that grants access to an application in any workspace that application will be available to the user at all times. If a user has not been granted access to an application in any workspace that application will be hidden from the navigation menu. The privilege to access a web application is not sufficient for to view, list, create, modify, or delete resource exposed by the web application. Additional privileges for those resources must be granted. Custom roles may be created, duplicated, modified, and deleted as needed. If a role is updated all users mapped to that role are affected. Due to the large number of privileges available SystemLink includes several built-in roles to facilitate getting started. Refer to the SystemLink manual for a summary of these roles. Go to the SystemLink Security application to review the details on privileges granted for each role. Note Built-in roles cannot be modified. They can be duplicated and the duplicated roles may be renamed and the privileges modified. This constraint exists because NI may add or change privileges for built-in roles between releases. Users assigned these built-in roles will have their privileges automatically change upon upgrade. To opt out of this behavior assign your users custom roles. Server Administrator Role \u00b6 SystemLink includes a special Server Administrator Role . This role has exclusive access to the Security application and can modify workspaces and roles. This role has full access to all of SystemLink, its applications, data, systems, etc. for every workspace . This is the most permissive role in SystemLink and should be used by users who administer access control for SystemLink exclusively. The user admin created during the guided setup of NI Web Server Configuration is automatically assigned the Server Administrator role. This is done such that administrators can access the Security application during initial setup and configure access control via an identity provider. NI encourages disabling the admin user in the NI Web Server Configuration after you have assigned the Server Administrator role to users backed by your identity provider. NI encourages disabling the Login as users controlled by the web server checkbox after mapping Server Administrators from your identity provider. Users are mapped the Server Administrator role by clicking the gear icon in the top right of the Roles tab in the Security Application . Click the gear icons to configure mappings for the Server Administrator role. Mappings for users assigned the Server Administrator role Users \u00b6 User's are backed by an identity provider (IdP) such as LDAP, Active Directory, or OpenID Connect that provides authenticated access to SystemLink. This is in contrast to systems and analysis routines that are managed within SystemLink and are not backed by an identity provider. A member of multiple workspaces can view resources across different workspaces in a common grid view. If a user is a member of multiple workspaces, the resources in those workspaces will be shown simultaneously within the grids and other views within SystemLink. This is useful when users need to view a rollup of resources across multiple workspaces. While resources in multiple workspaces may be viewed in a single grid, the actions a user can take against those resources may be different depending on their role in each workspace. Considerations for WebVIs, dashboards, and Jupyter Notebooks The privileges for WebVIs and dashboards control the create, view, update, and delete privileges for the WebVI and dashboard documents themselves. When a users opens and views a dashboard or WebVI the data they can access is determined by the privileges on the resources exposed by the WebVI or dashboard such as tags, queries, and notebooks. If a user does not have privileges to access the resources exposed by the WebVI or dashboard they will view no data. When a user runs a Jupyter Notebook from a Report or dashboard, the Notebook executes with the same privileges as the user. This allows the creation of Notebooks without workspace logic. For example, the Systems Management dashboard includes a tile displaying the number of alarms for various systems. This tile will only show systems within the logged in user's workspaces. If the user does not have privileges to view alarms, the tile returns no data. Service roles \u00b6 Service roles apply to SystemLink managed systems and analysis routines executed by Analysis Automation . Systems are always automatically assigned the built-in Automated Agent role. Analysis Automation routines can be configured to run with the built-in Automated Agent role, a user defined service role, with the privileges of the user initiating the analysis task, or with the TDM user (a Windows user on the SystemLink app server defined in NI SystemLink TDM Configuration ). Any custom role may be configured to be a service role at creation by toggling the Service role checkbox in the role configuration slide out. This cannot be changed after role creation. There are no restrictions on the privileges that may be applied to the role. It exists to signal to various SystemLink UIs what roles can be assigned to users and what roles can be assigned the systems and analysis routines. This forces the user to curtail roles appropriately to each scenario and avoid the proliferation of roles that grant greater access than is necessary to a user, system, or analysis routine. A role configured to be a Service role. Automatic Data Encapsulation \u00b6 When a system is added to SystemLink the user must choose which workspace the system will reside. The workspaces available to the user is determined by both their workspace membership and Add systems privilege. Once added to a workspace, data produced by the system will automatically be stored in the same workspace as the system. This capability allows users to develop workspace agnostic test applications. Changing workspaces does require changes or redeployment of test application. This is especially helpful when in scenarios such as production verification where the test application cannot change between validation and production but the validation data produced must be kept separate from production data. Systems job history, asset and tag data When a system is added to a workspace all its connected assets are also added to the same workspace. When a system is moved to another workspace its assets and job history are also moved. This is not the case with tags and tag history published by the system. These will be left in the original workspace and new tags are created in the new workspace. Mapping users to roles in workspaces \u00b6 Users are added to a workspace and assigned a role through a process called workspace and role mapping . The process is driven by metadata provided by the identity provider (IdP) user to authenticate users for SystemLink: OpenID Connect , LDAP , Active Directory, or local Windows accounts. Refer to the documentation for each of the IdP types for details on how to configure workspace and role mapping. By using metadata from an IdP you can create mappings that on-board large numbers of users into SystemLink using existing Active Directory and LDAP groups and OpenID Connect claims.","title":"Workspaces and Role-based Access Control"},{"location":"rbac/rbac/#workspaces-and-role-based-access-control","text":"The SystemLink role-based access control (RBAC) system provides strong isolation between different workspaces as well as fine grain privileges for systems, data, and analysis routines in SystemLink. Collectively this capability allows access to SystemLink to scale user and data access beyond a single team to an entire organization.","title":"Workspaces and Role-based Access Control"},{"location":"rbac/rbac/#concepts","text":"SystemLink RBAC leverages common concepts such as roles and users . It also introduces concepts such as workspaces and automatic data encapsulation to ensure strict access control of data produced by test systems. Role-based access control concepts in SystemLink","title":"Concepts"},{"location":"rbac/rbac/#workspace","text":"A workspace is a complete encapsulation of all systems, data, and other resources within SystemLink. A user must be a member of a workspace to access the systems and data within the workspace. This is true for access via the SystemLink web application and the SystemLink REST API. SystemLink always has at least one workspace, Default created at install time. Like all workspaces,the default workspace may be renamed or archived , but it has a additional properties to support backwards compatibility with pre-2020R1 SystemLink clients. Properties of the Default workspace All clients using AMQP for network communication exclusively publish data to the default workspace. All pre-2020R1 clients using HTTP for network communication exclusively publish data to the default workspace. OPC UA and Cloud Connector sessions always exist in the default workspace and may only access tags in the default workspace. File moving rules always exist in the default workspace and may only access files in the default workspace. Health tags for the SystemLink server are always published to the default workspace. The SystemLink Advanced Server license is required to create multiple workspaces, but there is no limit on the number of workspaces that can be created. Refer to the SystemLink Manual for steps to create a workspace. Two workspaces with unique resources in each workspace. Resources users can access are determined by their workspace membership. The actions a user can take on each resource is determined by their role. Systems, data, and analysis routines (collectively referred to as resources) are unique to individual workspaces. No resource occupies multiple workspaces. Some resources may be moved between workspaces. If a resource is duplicated the user is prompted to choose a workspace for the new resource.","title":"Workspace"},{"location":"rbac/rbac/#exceptions-for-workspaces","text":"The following resources in SystemLink have limitations or exceptions from the broader rules described above. DataFinder : DataFinder instances are global (meaning any user can view the DataFinder instance), but DataFinder Search Areas defined within a DataFinder instance are scoped to a single workspace. Search areas can only index File Ingestion Service data for the DataFinder Search Area's corresponding workspace. All indexed files of a search area are available only to members of the corresponding workspace. Notifications : Notification strategies, groups, and email templates are not scoped to a single workspace. These may be used with any alarm rule regardless of the workspace of the alarm rule. Roles may still restrict access to notification configuration. Jupyter Notebook : Jupyter Notebooks are not managed by SystemLink's RBAC. Refer to Sharing a Jupyter Notebook for details on how to allow multiple users collaborate with Notebooks.","title":"Exceptions for Workspaces"},{"location":"rbac/rbac/#archived-workspaces","text":"Workspaces may be archived if they are no longer in use. Archival does not delete resources or move resources to a new database or file storage location. Archived workspaces are only accessible to users with the Server Administrator role. Resources in archived workspaces cannot be created, updated, or deleted. Resources may be duplicated or moved into a non-archived workspace. All active alarms are automatically cleared when a workspace is archived. Refer to the SystemLink manual for steps to manage archived workspaces.","title":"Archived Workspaces"},{"location":"rbac/rbac/#users-and-roles","text":"Roles define the privileges a user, system or analysis procedure may take against resources within SystemLink. While roles are applied within the context of a workspace , roles is defined globally. This enables the same role to be used across multiple workspaces. Refer to the SystemLink manual for steps to manage roles. Role privileges explicitly grant what you can do - there are no deny privileges. Due to this a user may be assigned multiple roles within a single workspace that collectively describe what the user has access to. This is useful to prevent the proliferation of multiple different roles that have similar privileges. Instead, simple roles may be defined and composed together by assigning a user each role. Allow all privileges In each area of available privileges there is an Allow all privileges option. This privilege automatically grants all privileges for that area. If a new privilege is in a future version of SystemLink, users with Allow all privileges will automatically be granted the new privilege upon upgrade. If this behavior is undesirable, refrain from using Allow all privileges . All privileges for an area are granted when Allow all privileges is checked.","title":"Users and Roles"},{"location":"rbac/rbac/#built-in-and-custom-roles","text":"When creating and assigning roles , it is best practice to provide users with the minimum number of privileges to perform their work. SystemLink has granular privileges for services and application in the product. These privileges also include access to individual SystemLink applications such as Systems Manager and Test Monitor . Note If a user has a role that grants access to an application in any workspace that application will be available to the user at all times. If a user has not been granted access to an application in any workspace that application will be hidden from the navigation menu. The privilege to access a web application is not sufficient for to view, list, create, modify, or delete resource exposed by the web application. Additional privileges for those resources must be granted. Custom roles may be created, duplicated, modified, and deleted as needed. If a role is updated all users mapped to that role are affected. Due to the large number of privileges available SystemLink includes several built-in roles to facilitate getting started. Refer to the SystemLink manual for a summary of these roles. Go to the SystemLink Security application to review the details on privileges granted for each role. Note Built-in roles cannot be modified. They can be duplicated and the duplicated roles may be renamed and the privileges modified. This constraint exists because NI may add or change privileges for built-in roles between releases. Users assigned these built-in roles will have their privileges automatically change upon upgrade. To opt out of this behavior assign your users custom roles.","title":"Built-in and Custom Roles"},{"location":"rbac/rbac/#server-administrator-role","text":"SystemLink includes a special Server Administrator Role . This role has exclusive access to the Security application and can modify workspaces and roles. This role has full access to all of SystemLink, its applications, data, systems, etc. for every workspace . This is the most permissive role in SystemLink and should be used by users who administer access control for SystemLink exclusively. The user admin created during the guided setup of NI Web Server Configuration is automatically assigned the Server Administrator role. This is done such that administrators can access the Security application during initial setup and configure access control via an identity provider. NI encourages disabling the admin user in the NI Web Server Configuration after you have assigned the Server Administrator role to users backed by your identity provider. NI encourages disabling the Login as users controlled by the web server checkbox after mapping Server Administrators from your identity provider. Users are mapped the Server Administrator role by clicking the gear icon in the top right of the Roles tab in the Security Application . Click the gear icons to configure mappings for the Server Administrator role. Mappings for users assigned the Server Administrator role","title":"Server Administrator Role"},{"location":"rbac/rbac/#users","text":"User's are backed by an identity provider (IdP) such as LDAP, Active Directory, or OpenID Connect that provides authenticated access to SystemLink. This is in contrast to systems and analysis routines that are managed within SystemLink and are not backed by an identity provider. A member of multiple workspaces can view resources across different workspaces in a common grid view. If a user is a member of multiple workspaces, the resources in those workspaces will be shown simultaneously within the grids and other views within SystemLink. This is useful when users need to view a rollup of resources across multiple workspaces. While resources in multiple workspaces may be viewed in a single grid, the actions a user can take against those resources may be different depending on their role in each workspace. Considerations for WebVIs, dashboards, and Jupyter Notebooks The privileges for WebVIs and dashboards control the create, view, update, and delete privileges for the WebVI and dashboard documents themselves. When a users opens and views a dashboard or WebVI the data they can access is determined by the privileges on the resources exposed by the WebVI or dashboard such as tags, queries, and notebooks. If a user does not have privileges to access the resources exposed by the WebVI or dashboard they will view no data. When a user runs a Jupyter Notebook from a Report or dashboard, the Notebook executes with the same privileges as the user. This allows the creation of Notebooks without workspace logic. For example, the Systems Management dashboard includes a tile displaying the number of alarms for various systems. This tile will only show systems within the logged in user's workspaces. If the user does not have privileges to view alarms, the tile returns no data.","title":"Users"},{"location":"rbac/rbac/#service-roles","text":"Service roles apply to SystemLink managed systems and analysis routines executed by Analysis Automation . Systems are always automatically assigned the built-in Automated Agent role. Analysis Automation routines can be configured to run with the built-in Automated Agent role, a user defined service role, with the privileges of the user initiating the analysis task, or with the TDM user (a Windows user on the SystemLink app server defined in NI SystemLink TDM Configuration ). Any custom role may be configured to be a service role at creation by toggling the Service role checkbox in the role configuration slide out. This cannot be changed after role creation. There are no restrictions on the privileges that may be applied to the role. It exists to signal to various SystemLink UIs what roles can be assigned to users and what roles can be assigned the systems and analysis routines. This forces the user to curtail roles appropriately to each scenario and avoid the proliferation of roles that grant greater access than is necessary to a user, system, or analysis routine. A role configured to be a Service role.","title":"Service roles"},{"location":"rbac/rbac/#automatic-data-encapsulation","text":"When a system is added to SystemLink the user must choose which workspace the system will reside. The workspaces available to the user is determined by both their workspace membership and Add systems privilege. Once added to a workspace, data produced by the system will automatically be stored in the same workspace as the system. This capability allows users to develop workspace agnostic test applications. Changing workspaces does require changes or redeployment of test application. This is especially helpful when in scenarios such as production verification where the test application cannot change between validation and production but the validation data produced must be kept separate from production data. Systems job history, asset and tag data When a system is added to a workspace all its connected assets are also added to the same workspace. When a system is moved to another workspace its assets and job history are also moved. This is not the case with tags and tag history published by the system. These will be left in the original workspace and new tags are created in the new workspace.","title":"Automatic Data Encapsulation"},{"location":"rbac/rbac/#mapping-users-to-roles-in-workspaces","text":"Users are added to a workspace and assigned a role through a process called workspace and role mapping . The process is driven by metadata provided by the identity provider (IdP) user to authenticate users for SystemLink: OpenID Connect , LDAP , Active Directory, or local Windows accounts. Refer to the documentation for each of the IdP types for details on how to configure workspace and role mapping. By using metadata from an IdP you can create mappings that on-board large numbers of users into SystemLink using existing Active Directory and LDAP groups and OpenID Connect claims.","title":"Mapping users to roles in workspaces"}]}